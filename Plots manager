# =========================
# Candlestick-like charts (Carry/Vol) — un graphe par pays
# =========================
import matplotlib.pyplot as plt

# util: un seul pays
def _candlestick_one_country(ax, df_country, x_col_label):
    """
    df_country = lignes déjà filtrées pour un pays donné
    x_col_label = 'Bucket' | 'Box' | 'Fly' (texte pour l’axe X)
    """
    # on garde l'ordre naturel de l'axe X
    x_values = df_country[x_col_label].tolist()

    for _, row in df_country.iterrows():
        x       = row[x_col_label]
        vol     = row['Vol']

        # bandes en Carry/Vol
        min_c   = row['Min']   / vol
        q25_c   = row['Q25']   / vol
        med_c   = row['Q50']   / vol
        q75_c   = row['Q75']   / vol
        max_c   = row['Max']   / vol

        cov_now = row['CarryOverVol']
        cov_wk  = (row['CarryOneWeekAgo'] / vol) if (vol and not pd.isna(row['CarryOneWeekAgo'])) else None

        # whiskers noirs
        ax.plot([x, x], [min_c, max_c], color='black', marker='', linewidth=2)

        # barre blanche (IQR)
        ax.plot([x, x], [q25_c, q75_c], color='white', linewidth=6, alpha=1.0)
        # bordures fines (optionnel pour rappeler le contour)
        ax.plot([x, x], [q25_c, q75_c], color='black', linewidth=0.8, alpha=0.7)

        # médiane (trait noir)
        ax.plot([x, x], [med_c, med_c], color='black', marker='_', markersize=10)

        # current (point rouge)
        ax.plot(x, cov_now, color='red', marker='o', markersize=9, label='Current Value')

        # one week ago (point bleu)
        if cov_wk is not None and not pd.isna(cov_wk):
            ax.plot(x, cov_wk, color='steelblue', marker='o', markersize=7, label='1 Week ago')

    ax.set_ylabel('CarryOverVol')
    ax.set_xlabel(x_col_label if x_col_label != 'Bucket' else 'Maturity Buckets')
    ax.grid(True)

    # légende : 1 seule fois
    handles, labels = ax.get_legend_handles_labels()
    if handles:
        # supprime doublons
        seen = {}
        handles2, labels2 = [], []
        for h, l in zip(handles, labels):
            if l not in seen:
                seen[l] = True
                handles2.append(h); labels2.append(l)
        ax.legend(handles2, labels2, loc='upper right', fontsize=9)


# ---------- 1) Spreads vs Germany ----------
def plot_candlestick_spreads(df_spread, countries=('France','Italy','Spain')):
    """
    df_spread: colonnes attendues = ['Country','Bucket','Vol','Min','Q25','Q50','Q75','Max','CarryOverVol','CarryOneWeekAgo']
    Affiche un graphe par pays (empilé verticalement).
    """
    # ignore 1Y et 2Y comme sur tes captures
    df = df_spread.copy()
    if 'Bucket' in df.columns:
        df = df[df['Bucket'] > 2]

    for country in countries:
        sub = df[(df['Country'] == country)].sort_values(by='Bucket')
        if sub.empty:
            continue
        fig, ax = plt.subplots(figsize=(12, 6))
        _candlestick_one_country(ax, sub, x_col_label='Bucket')
        ax.set_title(f'Candlestick-like Chart for {country}')
        plt.show()


# ---------- 2) Boxes vs Germany ----------
def plot_candlestick_boxes(df_box, countries=('France','Italy','Spain')):
    """
    df_box: colonnes attendues = ['Country','Box','Vol','Min','Q25','Q50','Q75','Max','CarryOverVol','CarryOneWeekAgo']
    """
    for country in countries:
        sub = df_box[(df_box['Country'] == country)].copy()
        if sub.empty:
            continue
        # garde l'ordre désiré si disponible
        order = ['2s10s','5s10s','2s30s','5s30s','10s30s','10s15s']
        sub['__order__'] = sub['Box'].apply(lambda x: order.index(x) if x in order else 999)
        sub = sub.sort_values(['__order__','Box']).drop(columns='__order__')

        fig, ax = plt.subplots(figsize=(12, 6))
        _candlestick_one_country(ax, sub, x_col_label='Box')
        ax.set_title(f'Candlestick-like Chart (Boxes) for {country}')
        plt.show()


# ---------- 3) Outright ----------
def plot_candlestick_outright(df_outright, countries=('France','Italy','Spain')):
    """
    df_outright: colonnes attendues = ['Country','Maturity','Vol','Min','Q25','Q50','Q75','Max','CarryOverVol','CarryOneWeekAgo']
    """
    df = df_outright.copy()
    if 'Maturity' in df.columns:
        df = df[df['Maturity'] > 2]
        df = df.rename(columns={'Maturity':'Bucket'})

    for country in countries:
        sub = df[(df['Country'] == country)].sort_values(by='Bucket')
        if sub.empty:
            continue
        fig, ax = plt.subplots(figsize=(12, 6))
        _candlestick_one_country(ax, sub, x_col_label='Bucket')
        ax.set_title(f'Candlestick-like Chart (Outright) for {country}')
        plt.show()


# ---------- 4) Curve Outright ----------
def plot_candlestick_curve(df_curve, countries=('France','Italy','Spain')):
    """
    df_curve: colonnes attendues = ['Country','Box','Vol','Min','Q25','Q50','Q75','Max','CarryOverVol','CarryOneWeekAgo']
    """
    return plot_candlestick_boxes(df_curve, countries)


# ---------- 5) Fly Outright ----------
def plot_candlestick_fly_outright(df_fly_out, countries=('France','Italy','Spain')):
    """
    df_fly_out: colonnes attendues = ['Country','Fly','Vol','Min','Q25','Q50','Q75','Max','CarryOverVol','CarryOneWeekAgo']
    """
    for country in countries:
        sub = df_fly_out[(df_fly_out['Country'] == country)].copy()
        if sub.empty:
            continue
        order = ['2s5s10s','5s7s10s','10s15s30s','5s10s30s']
        sub['__order__'] = sub['Fly'].apply(lambda x: order.index(x) if x in order else 999)
        sub = sub.sort_values(['__order__','Fly']).drop(columns='__order__')

        fig, ax = plt.subplots(figsize=(12, 6))
        _candlestick_one_country(ax, sub, x_col_label='Fly')
        ax.set_title(f'Candlestick-like Chart (Fly Outright) for {country}')
        plt.show()


# ---------- 6) Fly Boxes vs Germany ----------
def plot_candlestick_fly_boxes(df_fly_box, countries=('France','Italy','Spain')):
    """
    df_fly_box: colonnes attendues = ['Country','Fly','Vol','Min','Q25','Q50','Q75','Max','CarryOverVol','CarryOneWeekAgo']
    """
    return plot_candlestick_fly_outright(df_fly_box, countries)


# Exemples
plot_candlestick_spreads(df_spread, countries=('France','Italy','Spain'))
plot_candlestick_boxes(df_box, countries=('France','Italy','Spain'))
plot_candlestick_outright(df_outright, countries=('France','Italy','Spain'))
plot_candlestick_curve(df_curve_outright, countries=('France','Italy','Spain'))
plot_candlestick_fly_outright(df_fly_outright, countries=('France','Italy','Spain'))
plot_candlestick_fly_boxes(df_fly_box, countries=('France','Italy','Spain'))
